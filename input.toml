# REINVENT4 TOML input example for reinforcement/curriculum learning
#
#


run_type = "staged_learning"
use_cuda = true  # run on the GPU if true, on the CPU if false
tb_logdir = "tb_logs"  # name of the TensorBoard logging directory

[parameters]

summary_csv_prefix = "test"  # prefix for the CSV file
use_checkpoint = false  # if true read diversity filter from agent_file
purge_memories = false  # if true purge all diversity filter memories after each stage

## using Mol2Mol MediumSimilarity prior
prior_file = "priors/mol2mol_medium_similarity.prior"
agent_file = "priors/mol2mol_medium_similarity.prior"
smiles_file = ""  # path to input smiles file, 1 compound per line
sample_strategy = "multinomial"  # multinomial or beamsearch (deterministic)
distance_threshold = 100

batch_size = 64          # smiles generated per epoch

unique_sequences = true  # if true remove all duplicates raw sequences in each step
                         # only here for backward compatibility
randomize_smiles = false  # this is reversed for some reason

#Didn't test how changing sigma value effects SMILES generation
[learning_strategy]

type = "dap"      # dap: only one supported
sigma = 128       # sigma of the RL reward function
rate = 0.0001     # for torch.optim

#best diversity filter for mol2mol
[diversity_filter]  
            
type = "PenalizeSameSmiles" 
penalty_multiplier = 0.5         # penalty factor for PenalizeSameSmiles


### Note that stages must always be a list i.e. double brackets
[[stage]]

chkpt_file = 'test'  # name of the checkpoint file, can be reused as agent
termination = "simple"  # termination criterion fot this stage
max_score = 0.8  # terminate if this total score is exceeded
min_steps = 1  # run for at least this number of steps
max_steps = 50  # terminate entire run when exceeded

[stage.scoring]
type = "geometric_mean"  # aggregation function
filename = "configs/dp5/dp5_scoring.toml"  # file with scoring setup for this stage
filetype = "toml"  # file format: TOML or JSON, no default, must be present





